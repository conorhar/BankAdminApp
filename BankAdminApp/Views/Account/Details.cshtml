@using BankAdminApp.Data
@using BankAdminApp.ViewModels
@model BankAdminApp.ViewModels.AccountDetailsViewModel

@{
    ViewData["Title"] = "Account Page";
}

<div class="container-fluid">
    <div class="row">
        <div class="col-lg-4 col-md-6 col-sm-6 mr-auto ml-auto">
            <div class="card card-stats">
                <div class="card-header card-header-warning card-header-icon">
                    <div class="card-icon">
                        <i class="material-icons">account_balance</i>
                    </div>
                    <p class="card-category">Account number</p>
                    <h3 class="card-title">@Model.AccountId</h3>
                </div>
                <div class="card-footer"></div>
            </div>
        </div>
        <div class="col-lg-4 col-md-6 col-sm-6 mr-auto ml-auto">
            <div class="card card-stats">
                <div class="card-header card-header-success card-header-icon">
                    <div class="card-icon">
                        <i class="material-icons">attach_money</i>
                    </div>
                    <p class="card-category">Balance</p>
                    <h3 class="card-title">@Model.Balance</h3>
                </div>
                <div class="card-footer"></div>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-md-12">
            <div class="card">
                <div class="card-header card-header-icon card-header-rose">
                    <div class="card-icon">
                        <i class="material-icons">receipt_long</i>
                    </div>
                    <h4 class="card-title ">Account transactions</h4>
                </div>
                <div class="card-body table-hover">
                    <div class="table-responsive">
                        <table class="table">
                            <thead class=" text-primary">
                            <tr>
                                <th>ID</th>
                                <th>Amount</th>
                                <th>Balance</th>
                                <th>Date</th>
                                <th>Type</th>
                            </tr>
                            </thead>
                            <tbody id="transactions">

                            @foreach (var t in Model.TransactionItems)
                            {
                                <partial name="_AccountTransactionRow" model="t"/>
                            }

                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
    
    <button id="load-more-btn" class="btn btn-primary btn-round" onclick="checkIfEnded(); fetch20more(); return false;">
        <i class="material-icons">refresh</i> Load more
    </button>
    
    <div class="modal fade" id="transactionModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h4 class="modal-title">Transaction details</h4>
                    <button type="button" class="close" data-dismiss="modal" aria-hidden="true">
                        <i class="material-icons">clear</i>
                    </button>
                </div>
                <div class="modal-body" id="transaction-details">

                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-danger btn-link" data-dismiss="modal">Close</button>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts
{
    <script>
        function isNullOrWhiteSpace(str) {
            return (!str || str.length === 0 || /^\s*$/.test(str));
        }

        function showAllDetails(obj) {

            var output = `<h5><b>Id:</b> ${obj.TransactionId}</h5>
                            <h5><b>Date:</b> ${obj.Date.slice(0, 10)}</h5>
                            <h5><b>Type:</b> ${obj.Type}</h5>`;

            if (!(isNullOrWhiteSpace(obj.Operation))) {
                output += `<h5><b>Operation:</b> ${obj.Operation}</h5>`;
            }

            output += `<h5><b>Amount:</b> ${(Math.round(obj.Amount * 100) / 100).toFixed(2).toString().replace('.', ',')}</h5>
                        <h5><b>Balance:</b> ${(Math.round(obj.Balance * 100) / 100).toFixed(2).toString().replace('.', ',')}</h5>`;

            if (!(isNullOrWhiteSpace(obj.Symbol))) {
                output += `<h5><b>Symbol:</b> ${obj.Symbol}</h5>`;
            }

            if (obj.Bank) {
                output += `<h5><b>Bank:</b> ${obj.Bank}</h5>
                            <h5><b>Account:</b> ${obj.Account}</h5>`;
            }

            $("#transaction-details").html(output);
        }

        var clickCounter = 0;

        function checkIfEnded() {
            clickCounter += 1;

            if (clickCounter == @Model.AmountClicksUntilEnd) {
                $("#load-more-btn").attr('disabled', 'disabled');
            }
        }
        
        var pos = 0;

        function fetch20more() {
            pos += 20;

            $.ajax({
                url: "/account/gettransactionsfrom/" + @Model.AccountId + "?pos=" + pos,
                success: function(result) {
                    $("#transactions").append(result);
                }
            });
        }

    </script>
}
